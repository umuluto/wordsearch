{"version":3,"sources":["app_screens.js","Options.js","Home.js","Menu.js","Board.js","List.js","Play.js","App.js","serviceWorker.js","index.js"],"names":["Options","sounds","setSounds","toggleOptions","className","type","min","max","step","value","volume","onChange","e","k","target","onClick","muted","Home","goTo","screens","Menu","mergeData","useState","levels","setLevels","useEffect","fetch","then","f","json","o","goLevel","l","category","buttons","map","i","key","colors","color_idx","Board","letters","push","boardSize","Math","sqrt","length","marks","setMarks","hilites","setHilites","boardStyle","gridTemplateRows","gridTemplateColumns","onMouseDown","onMouseEnter","straight2","onMouseUp","col_a","col_b","row_a","row_b","d","sign","points","end","join","correct","play","ckpts","color","wrong","a","b","abs","straight3","c","cells","selected","find","includes","hilited","style","onMouseLeave","List","words","wordFounds","items","hinted","filter","w","Play","data","goHome","founds","setFounds","setHinted","st","App","screen","setScreen","setData","blurred","setBlurred","showOptions","setOptions","Audio","main","dt","overlay","blur","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8f9ef27.chunk.js","sourcesContent":["export default {\r\n\tHOME: 1,\r\n\tMENU: 2,\r\n\tREAD: 3,\r\n\tPLAY: 4,\r\n\tLOAD: 5,\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Options({ sounds, setSounds, toggleOptions }) {\r\n\tconst onChange = e => {\r\n\t\tfor (const k in sounds.type) {\r\n\t\t\tsounds.type[k].volume = e.target.value;\r\n\t\t}\r\n\t\tsetSounds({...sounds, volume: e.target.value});\r\n\t};\r\n\r\n\tconst mute = () => {\r\n\t\tfor (const k in sounds.type) {\r\n\t\t\tsounds.type[k].muted = !sounds.type[k].muted;\r\n\t\t}\r\n\t\tsetSounds({...sounds, muted: !sounds.muted});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='options'>\r\n\t\t\t<input className='options__slider' type='range' min='0' max='1' step='0.01'\r\n\t\t\t\tvalue={sounds.volume}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<p className='button button--black' onClick={mute}>\r\n\t\t\t\t{sounds.muted ? 'unmute.' : 'mute.'}\r\n\t\t\t</p>\r\n\t\t\t<p className='button button--black' onClick={toggleOptions}>back.</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport screens from './app_screens.js';\r\n\r\nexport default function Home({ goTo, toggleOptions }) {\r\n\treturn (\r\n\t\t<div className='home'>\r\n\t\t\t<p className='home__title'>Word Search</p>\r\n\t\t\t<ul className='home__buttons'>\r\n\t\t\t\t<p className='button'\r\n\t\t\t\t\tonClick={goTo(screens.MENU)}\r\n\t\t\t\t>\r\n\t\t\t\t\tNormal Game\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='button'\r\n\t\t\t\t\tonClick={goTo(screens.READ)}\r\n\t\t\t\t>\r\n\t\t\t\t\tGenerate Game\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='button'\r\n\t\t\t\t\tonClick={toggleOptions}\r\n\t\t\t\t>\r\n\t\t\t\t\tOptions\r\n\t\t\t\t</p>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport screens from './app_screens.js';\r\n\r\nexport default function Menu({ goTo, mergeData }) {\r\n\tconst [levels, setLevels] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/wordsearch/data/index.json')\r\n\t\t\t.then(f => f.json())\r\n\t\t\t.then(o => setLevels(o));\r\n\t}, []);\r\n\r\n\tconst goLevel = l => () => {\r\n\t\tmergeData({ category: l });\r\n\t\tfetch(`/wordsearch/data/${l}.json`)\r\n\t\t\t.then(f => f.json())\r\n\t\t\t.then(o => {\r\n\t\t\t\tmergeData(o);\r\n\t\t\t\tgoTo(screens.PLAY)();\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst buttons = levels.map((l, i) => (\r\n\t\t<p className='button button--medium'\r\n\t\t\tonClick={goLevel(l)}\r\n\t\t\tkey={i}\r\n\t\t>\r\n\t\t\t{l}\r\n\t\t</p>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className='menu'>\r\n\t\t\t<div className='menu__title'>\r\n\t\t\t\t<p className='menu__title__button button' onClick={goTo(screens.HOME)}>quit.</p>\r\n\t\t\t\t<p className='menu__title__message'>Categories:</p>\r\n\t\t\t</div>\r\n\t\t\t{buttons}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nconst colors = [\r\n\t'#002685', '#449adf', '#4dc7fd',\r\n\t'#4cde77', '#5e53c7', '#7e77d2',\r\n\t'#cd1e10', '#fc007f', '#fe78d1',\r\n\t'#763931', '#f1ab00', '#fadf00',\r\n\t'#000000', '#007e3a', '#64d13e',\r\n];\r\n\r\nlet color_idx = 0;\r\n\r\nfunction getColor() {\r\n\tcolor_idx %= colors.length;\r\n\treturn colors[color_idx++];\r\n}\r\n\r\nexport default function Board({ letters, push, sounds }) {\r\n\tconst boardSize = Math.sqrt(letters.length);\r\n\tconst [marks, setMarks] = useState([]);\r\n\tconst [hilites, setHilites] = useState([]);\r\n\r\n\tconst boardStyle = {\r\n\t\tgridTemplateRows: `repeat(${boardSize}, 1fr)`,\r\n\t\tgridTemplateColumns: `repeat(${boardSize}, 1fr)`,\r\n\t};\r\n\r\n\tconst onMouseDown = i => () => {\r\n\t\tsetMarks([i, i]);\r\n\t};\r\n\r\n\tconst onMouseEnter = i => () => {\r\n\t\tif (!marks.length) return;\r\n\r\n\t\tif (straight2(marks[0], i)) {\r\n\t\t\tsetMarks([marks[0], i]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMouseUp = () => {\r\n\t\tif (!marks.length) return;\r\n\r\n\t\tconst col_a = marks[0] % boardSize;\r\n\t\tconst col_b = marks[1] % boardSize;\r\n\r\n\t\tconst row_a = ~~(marks[0] / boardSize);\r\n\t\tconst row_b = ~~(marks[1] / boardSize);\r\n\r\n\t\tconst d = Math.sign(col_b - col_a) + Math.sign(row_b - row_a) * boardSize;\r\n\r\n\t\tconst points = [];\r\n\t\tfor (let i = marks[0], end = marks[1] + d; i !== end; i += d) {\r\n\t\t\tpoints.push(i);\r\n\t\t}\r\n\r\n\t\tif (push(points.map(i => letters[i]).join(''))) {\r\n\t\t\tsounds.correct.play();\r\n\t\t\tsetHilites([\r\n\t\t\t\t...hilites,\r\n\t\t\t\t{ ckpts: points, color: getColor() }\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tsounds.wrong.play();\r\n\t\t}\r\n\r\n\t\tsetMarks([]);\r\n\t};\r\n\r\n\tconst straight2 = (a, b) => {\r\n\t\tconst col_a = a % boardSize;\r\n\t\tconst col_b = b % boardSize;\r\n\t\tif (col_a === col_b) return true;\r\n\r\n\t\tconst row_a = ~~(a / boardSize);\r\n\t\tconst row_b = ~~(b / boardSize);\r\n\t\tif (row_a === row_b) return true;\r\n\r\n\t\treturn Math.abs((col_a - col_b) / (row_a - row_b)) === 1;\r\n\t};\r\n\r\n\tconst straight3 = (a, b, c) => {\r\n\t\tconst col_a = a % boardSize;\r\n\t\tconst col_b = b % boardSize;\r\n\t\tconst col_c = c % boardSize;\r\n\r\n\t\tconst row_a = ~~(a / boardSize);\r\n\t\tconst row_b = ~~(b / boardSize);\r\n\t\tconst row_c = ~~(c / boardSize);\r\n\r\n\t\treturn (col_a - col_b) * (row_a - row_c) === (col_a - col_c) * (row_a - row_b);\r\n\t};\r\n\r\n\tconst min = Math.min(...marks);\r\n\tconst max = Math.max(...marks);\r\n\tconst cells = [...letters].map((c, i) => {\r\n\t\tconst selected = (min <= i && i <= max && straight3(...marks, i))\r\n\t\t\t? 'board__cell--selected'\r\n\t\t\t: '';\r\n\r\n\t\tconst color = hilites.find(e => e.ckpts.includes(i))?.color;\r\n\t\tconst hilited = color ? 'board__cell--hilited' : '';\r\n\r\n\t\tconst style = { color: color };\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`board__cell ${selected} ${hilited}`}\r\n\t\t\t\tonMouseDown={onMouseDown(i)}\r\n\t\t\t\tonMouseEnter={onMouseEnter(i)}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tkey={i}\r\n\t\t\t>\r\n\t\t\t\t{c}\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='board'\r\n\t\t\tstyle={boardStyle}\r\n\t\t\tonMouseUp={onMouseUp}\r\n\t\t\tonMouseLeave={onMouseUp}\r\n\t\t>\r\n\t\t\t{cells}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function List({ words, wordFounds, hinted }) {\r\n\tconst visibles = hinted\r\n\t\t? [...wordFounds, ...words.filter(e => !wordFounds.includes(e))]\r\n\t\t: [...wordFounds];\r\n\r\n\tconst items = visibles.map((w, i) => {\r\n\t\tconst hinted = wordFounds.includes(w)\r\n\t\t\t? ''\r\n\t\t\t: 'list__item--hinted';\r\n\r\n\t\treturn <p className={`list__item ${hinted}`} key={w}>{w}</p>\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='list'>\r\n\t\t\t<p className='list__message'>{`Found ${wordFounds.length}/${words.length}`}</p>\r\n\t\t\t{items}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport Board from './Board.js';\r\nimport List from './List.js';\r\n\r\nexport default function Play({ data, goHome, toggleOptions, sounds }) {\r\n\tconst [founds, setFounds] = useState([]);\r\n\tconst [hinted, setHinted] = useState(false);\r\n\r\n\tconst toggleHint = () => setHinted(st => !st);\r\n\r\n\tconst push = w => {\r\n\t\tif (founds.includes(w) || !data.words.includes(w)) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tsetFounds([...founds, w]);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='play'> \r\n\t\t\t<div className='play__left'>\r\n\t\t\t\t<p className='play__category'>&ldquo;{data.category}&rdquo;</p>\r\n\t\t\t\t<ul className='play__buttons'>\r\n\t\t\t\t\t<p className='button' onClick={toggleHint}>hints.</p>\r\n\t\t\t\t\t<p className='button' onClick={toggleOptions}>options.</p>\r\n\t\t\t\t\t<p className='button' onClick={goHome}>quit.</p>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className='play__mid'>\r\n\t\t\t\t<Board letters={data.letters} push={push} sounds={sounds} />\r\n\t\t\t</div>\r\n\t\t\t<div className='play__right'>\r\n\t\t\t\t<List words={data.words} wordFounds={founds} hinted={hinted} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport screens from './app_screens.js';\r\nimport Options from './Options.js';\r\nimport Home from './Home.js';\r\nimport Menu from './Menu.js';\r\nimport Play from './Play.js';\r\n\r\nimport './temp.css';\r\n\r\nexport default function App() {\r\n\tconst [screen, setScreen] = useState(screens.HOME);\r\n\tconst [data, setData] = useState();\r\n\tconst [blurred, setBlurred] = useState(false);\r\n\tconst [showOptions, setOptions] = useState(false);\r\n\tconst [sounds, setSounds] = useState({\r\n\t\ttype: {\r\n\t\t\tcorrect: new Audio('/wordsearch/correct.mp3'),\r\n\t\t\twrong: new Audio('/wordsearch/wrong.mp3'),\r\n\t\t},\r\n\t\tvolume: 1,\r\n\t\tmuted: false,\r\n\t});\r\n\r\n\tconst goTo = d => () => setScreen(d);\r\n\tconst goHome = () => setScreen(screens.HOME);\r\n\tconst mergeData = d => setData(dt => ({...dt, ...d}));\r\n\tconst toggleOptions = () => {\r\n\t\tsetBlurred(!blurred);\r\n\t\tsetOptions(!showOptions);\r\n\t};\r\n\r\n\tlet main = null;\r\n\tswitch (screen) {\r\n\t\tcase screens.HOME:\r\n\t\t\tmain = <Home goTo={goTo} toggleOptions={toggleOptions}/>;\r\n\t\t\tbreak;\r\n\t\tcase screens.MENU:\r\n\t\t\tmain = <Menu goTo={goTo} mergeData={mergeData} />;\r\n\t\t\tbreak;\r\n\t\tcase screens.PLAY:\r\n\t\t\tmain = <Play goHome={goHome} toggleOptions={toggleOptions} data={data} sounds={sounds.type} />;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tmain = <p>not implemented</p>;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tlet overlay = showOptions\r\n\t\t? <Options sounds={sounds} setSounds={setSounds} toggleOptions={toggleOptions} />\r\n\t\t: null;\r\n\r\n\tconst blur = blurred ? 'wrapper--blurred' : '';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`wrapper ${blur}`}>\r\n\t\t\t\t{main}\r\n\t\t\t</div>\r\n\t\t\t{overlay}\r\n\t\t</>\r\n\t);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}