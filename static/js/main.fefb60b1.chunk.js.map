{"version":3,"sources":["app_screens.js","Home.js","Menu.js","sounds.js","Board.js","List.js","Play.js","App.js","serviceWorker.js","index.js"],"names":["Home","goTo","className","onClick","screens","Menu","mergeData","useState","levels","setLevels","useEffect","fetch","then","f","json","o","goLevel","l","category","buttons","map","i","key","correct","Audio","wrong","colors","color_idx","Board","letters","push","boardSize","Math","sqrt","length","marks","setMarks","hilites","setHilites","boardStyle","gridTemplateRows","gridTemplateColumns","onMouseDown","onMouseEnter","straight2","onMouseUp","col_a","col_b","row_a","row_b","d","sign","points","end","join","sounds","play","ckpts","color","a","b","abs","straight3","c","min","max","cells","selected","find","e","includes","hilited","style","onMouseLeave","List","words","wordFounds","items","hinted","filter","w","Play","data","goHome","founds","setFounds","setHinted","st","App","screen","setScreen","setData","main","dt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fefb60b1.chunk.js","sourcesContent":["export default {\n\tHOME: 1,\n\tMENU: 2,\n\tREAD: 3,\n\tPLAY: 4,\n\tLOAD: 5,\n}\n","import React from 'react';\nimport screens from './app_screens.js';\n\nexport default function Home({ goTo }) {\n\treturn (\n\t\t<div className='home'>\n\t\t\t<p className='home__title'>Word Search</p>\n\t\t\t<ul className='home__buttons'>\n\t\t\t\t<p className='button'\n\t\t\t\t\tonClick={goTo(screens.MENU)}\n\t\t\t\t>\n\t\t\t\t\tNormal Game\n\t\t\t\t</p>\n\t\t\t\t<p className='button'\n\t\t\t\t\tonClick={goTo(screens.READ)}\n\t\t\t\t>\n\t\t\t\t\tGenerate Game\n\t\t\t\t</p>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport screens from './app_screens.js';\n\nexport default function Menu({ goTo, mergeData }) {\n\tconst [levels, setLevels] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetch('/wordsearch/data/index.json')\n\t\t\t.then(f => f.json())\n\t\t\t.then(o => setLevels(o));\n\t}, []);\n\n\tconst goLevel = l => () => {\n\t\tmergeData({ category: l });\n\t\tfetch(`/wordsearch/data/${l}.json`)\n\t\t\t.then(f => f.json())\n\t\t\t.then(o => {\n\t\t\t\tmergeData(o);\n\t\t\t\tgoTo(screens.PLAY)();\n\t\t\t});\n\t};\n\n\tconst buttons = levels.map((l, i) => (\n\t\t<p className='button button--medium'\n\t\t\tonClick={goLevel(l)}\n\t\t\tkey={i}\n\t\t>\n\t\t\t{l}\n\t\t</p>\n\t));\n\n\treturn (\n\t\t<div className='menu'>\n\t\t\t<p className='menu__message'>Categories:</p>\n\t\t\t<p className='menu__button button' onClick={goTo(screens.HOME)}>quit.</p>\n\t\t\t{buttons}\n\t\t</div>\n\t);\n}\n","export default {\n\tcorrect: new Audio('/wordsearch/correct.mp3'),\n\twrong: new Audio('/wordsearch/wrong.mp3')\n};\n","import React, { useState } from 'react';\nimport sounds from './sounds.js';\n\nconst colors = [\n\t'#002685', '#449adf', '#4dc7fd',\n\t'#4cde77', '#5e53c7', '#7e77d2',\n\t'#cd1e10', '#fc007f', '#fe78d1',\n\t'#763931', '#f1ab00', '#fadf00',\n\t'#000000', '#007e3a', '#64d13e',\n];\n\nlet color_idx = 0;\n\nfunction getColor() {\n\tcolor_idx %= colors.length;\n\treturn colors[color_idx++];\n}\n\nexport default function Board({ letters, push }) {\n\tconst boardSize = Math.sqrt(letters.length);\n\tconst [marks, setMarks] = useState([]);\n\tconst [hilites, setHilites] = useState([]);\n\n\tconst boardStyle = {\n\t\tgridTemplateRows: `repeat(${boardSize}, 1fr)`,\n\t\tgridTemplateColumns: `repeat(${boardSize}, 1fr)`,\n\t};\n\n\tconst onMouseDown = i => () => {\n\t\tsetMarks([i, i]);\n\t};\n\n\tconst onMouseEnter = i => () => {\n\t\tif (!marks.length) return;\n\n\t\tif (straight2(marks[0], i)) {\n\t\t\tsetMarks([marks[0], i]);\n\t\t}\n\t};\n\n\tconst onMouseUp = () => {\n\t\tif (!marks.length) return;\n\n\t\tconst col_a = marks[0] % boardSize;\n\t\tconst col_b = marks[1] % boardSize;\n\n\t\tconst row_a = ~~(marks[0] / boardSize);\n\t\tconst row_b = ~~(marks[1] / boardSize);\n\n\t\tconst d = Math.sign(col_b - col_a) + Math.sign(row_b - row_a) * boardSize;\n\n\t\tconst points = [];\n\t\tfor (let i = marks[0], end = marks[1] + d; i !== end; i += d) {\n\t\t\tpoints.push(i);\n\t\t}\n\n\t\tif (push(points.map(i => letters[i]).join(''))) {\n\t\t\tsounds.correct.play();\n\t\t\tsetHilites([\n\t\t\t\t...hilites,\n\t\t\t\t{ ckpts: points, color: getColor() }\n\t\t\t]);\n\t\t} else {\n\t\t\tsounds.wrong.play();\n\t\t}\n\n\t\tsetMarks([]);\n\t};\n\n\tconst straight2 = (a, b) => {\n\t\tconst col_a = a % boardSize;\n\t\tconst col_b = b % boardSize;\n\t\tif (col_a === col_b) return true;\n\n\t\tconst row_a = ~~(a / boardSize);\n\t\tconst row_b = ~~(b / boardSize);\n\t\tif (row_a === row_b) return true;\n\n\t\treturn Math.abs((col_a - col_b) / (row_a - row_b)) === 1;\n\t};\n\n\tconst straight3 = (a, b, c) => {\n\t\tconst col_a = a % boardSize;\n\t\tconst col_b = b % boardSize;\n\t\tconst col_c = c % boardSize;\n\n\t\tconst row_a = ~~(a / boardSize);\n\t\tconst row_b = ~~(b / boardSize);\n\t\tconst row_c = ~~(c / boardSize);\n\n\t\treturn (col_a - col_b) * (row_a - row_c) === (col_a - col_c) * (row_a - row_b);\n\t};\n\n\tconst min = Math.min(...marks);\n\tconst max = Math.max(...marks);\n\tconst cells = [...letters].map((c, i) => {\n\t\tconst selected = (min <= i && i <= max && straight3(...marks, i))\n\t\t\t? 'board__cell--selected'\n\t\t\t: '';\n\n\t\tconst color = hilites.find(e => e.ckpts.includes(i))?.color;\n\t\tconst hilited = color ? 'board__cell--hilited' : '';\n\n\t\tconst style = { color: color };\n\n\t\treturn (\n\t\t\t<div className={`board__cell ${selected} ${hilited}`}\n\t\t\t\tonMouseDown={onMouseDown(i)}\n\t\t\t\tonMouseEnter={onMouseEnter(i)}\n\t\t\t\tstyle={style}\n\t\t\t\tkey={i}\n\t\t\t>\n\t\t\t\t{c}\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className='board'\n\t\t\tstyle={boardStyle}\n\t\t\tonMouseUp={onMouseUp}\n\t\t\tonMouseLeave={onMouseUp}\n\t\t>\n\t\t\t{cells}\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nexport default function List({ words, wordFounds, hinted }) {\n\tconst visibles = hinted\n\t\t? [...wordFounds, ...words.filter(e => !wordFounds.includes(e))]\n\t\t: [...wordFounds];\n\n\tconst items = visibles.map((w, i) => {\n\t\tconst hinted = wordFounds.includes(w)\n\t\t\t? ''\n\t\t\t: 'list__item--hinted';\n\n\t\treturn <p className={`list__item ${hinted}`} key={w}>{w}</p>\n\t});\n\n\treturn (\n\t\t<div className='list'>\n\t\t\t<p className='list__message'>{`Found ${wordFounds.length}/${words.length}`}</p>\n\t\t\t{items}\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport Board from './Board.js';\nimport List from './List.js';\n\nexport default function Play({ data, goHome }) {\n\tconst [founds, setFounds] = useState([]);\n\tconst [hinted, setHinted] = useState(false);\n\n\tconst toggleHint = () => setHinted(st => !st);\n\n\tconst push = w => {\n\t\tif (founds.includes(w) || !data.words.includes(w)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tsetFounds([...founds, w]);\n\t\t\treturn true;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='play'> \n\t\t\t<div className='play__left'>\n\t\t\t\t<p className='play__category'>&ldquo;{data.category}&rdquo;</p>\n\t\t\t\t<ul className='play__buttons'>\n\t\t\t\t\t<p className='button' onClick={toggleHint}>hints.</p>\n\t\t\t\t\t<p className='button'>options.</p>\n\t\t\t\t\t<p className='button' onClick={goHome}>quit.</p>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className='play__mid'>\n\t\t\t\t<Board letters={data.letters} push={push} />\n\t\t\t</div>\n\t\t\t<div className='play__right'>\n\t\t\t\t<List words={data.words} wordFounds={founds} hinted={hinted} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport screens from './app_screens.js';\nimport Home from './Home.js';\nimport Menu from './Menu.js';\nimport Play from './Play.js';\n\nimport './temp.css';\n\nexport default function App() {\n\tconst [screen, setScreen] = useState(screens.HOME);\n\tconst [data, setData] = useState();\n\n\tconst goTo = d => () => setScreen(d);\n\tconst goHome = () => setScreen(screens.HOME);\n\tconst mergeData = d => setData(dt => ({...dt, ...d}));\n\n\tlet main = null;\n\tswitch (screen) {\n\t\tcase screens.HOME:\n\t\t\tmain = <Home goTo={goTo} />;\n\t\t\tbreak;\n\t\tcase screens.MENU:\n\t\t\tmain = <Menu goTo={goTo} mergeData={mergeData} />;\n\t\t\tbreak;\n\t\tcase screens.PLAY:\n\t\t\tmain = <Play goHome={goHome} data={data} />;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tmain = <p>not implemented</p>;\n\t\t\tbreak;\n\t}\n\n\tlet overlay = null;\n\n\treturn <>{main}{overlay}</>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}